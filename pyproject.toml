[project]
name = "images-pipeline"
version = "0.1.0"
description = "A comprehensive guide to optimizing image processing pipelines with real-world benchmarks and performance analysis"
authors = [{ name = "Marcos Lino", email = "mfilipelino@gmail.com" }]
license = "MIT"
readme = "README.md"
requires-python = ">=3.12"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
]
dependencies = [
    "pydantic>=2.0",
    "boto3>=1.34.0",
    "pillow>=10.0.0",
    "scikit-learn>=1.3.0",
    "numpy>=1.24.0",
    "aioboto3>=12.0.0",
]

[project.urls]
"Homepage" = "https://github.com/mfilipelino/images-pipeline"
"Repository" = "https://github.com/mfilipelino/images-pipeline"
"Bug Tracker" = "https://github.com/mfilipelino/images-pipeline/issues"


[project.scripts]
images-pipeline = "images_pipeline.main:main"
process-images = "images_pipeline.process_images:main"

[dependency-groups]
dev = [
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "pyright>=1.1.389",
    "ruff>=0.9.3",
    "pre-commit>=4.0.1",
    "boto3-stubs[s3]>=1.38.46",
]

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.pyright]
pythonVersion = "3.12"
typeCheckingMode = "strict"
reportMissingImports = true
reportMissingTypeStubs = false
include = ["src"]

[tool.uv]
package = true

[tool.pytest.ini_options]
addopts = "-ra -q"
testpaths = ["tests"]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/.venv/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"
